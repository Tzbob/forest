/*****************************************
  Emitting Generated Code                  
*******************************************/
class Tree extends ((java.lang.String)=>(scala.xml.Node)) {
def apply(x0:java.lang.String): scala.xml.Node = {
val x1 = {xml.Text("Content: " + x0)}
val x3 = <div class={"message"}>{x1}</div>
x3
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
/*****************************************
  Emitting Generated Code                  
*******************************************/
class SeveralChildren extends ((java.lang.String)=>(RecordNodeNode)) {
def apply(x5:java.lang.String): RecordNodeNode = {
val x6 = {xml.Text(x5)}
val x8 = <strong>{x6}</strong>
val x10 = {xml.Text("Hello ")}
val x11 = {xml.Text("!")}
val x13 = <div>{List(x10, x8, x11)}</div>
val x9 = RecordNodeNode(root = x13, greeted = x8)
x9
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
/*****************************************
  Emitting Generated Code                  
*******************************************/
class DynamicChildren extends ((scala.collection.immutable.List[java.lang.String])=>(scala.xml.Node)) {
def apply(x15:scala.collection.immutable.List[java.lang.String]): scala.xml.Node = {
val x21 = x15.map{
x16 => 
val x17 = {xml.Text(x16)}
val x19 = <li>{x17}</li>
x19
}
val x22 = <ul>{x21}</ul>
x22
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
case class RecordNodeNode(root: scala.xml.Node, greeted: scala.xml.Node)
